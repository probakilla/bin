#!/usr/bin/python3

import readline
import json
import getopt
import sys
import os
from os.path import expanduser

# List of words used for the auto completion
repolist = []
# Absolute path to $HOME
home = expanduser("~")
# json file path (static one)
repo_file = home + "/bin/repolist.json"


# Display a quick help for the script and also the usage
def help():
    print('This script allows you to clone a registred repositry. The')
    print('wanted repository has to be registred in the repolist.json')
    print('file.\n')
    usage()


# Display the usage of the script and the list of the options
def usage():
    print('USAGE : cotorep [options]')
    print('List of options :')
    print(' -h, --help \n\t' +
          'Displays the help for the script.')
    print(' -l, --list \n\t' +
          'Displays the full list of repository presents in the file.')


# Display the full list of repositories presents in the json file
def list_repositories():
    # Open the json file
    with open(repo_file) as json_file:
        json_data = json.load(json_file)
    print('Github repositories :')
    for data in json_data['github']['repolist']:
        print("  " + data)
    print('Savane git repositories :')
    for data in json_data['savane']['git']:
        print("  " + data)
    print('Savane svn repositories')
    for data in json_data['savane']['svn']:
        print("  " + data)
    json_file.close()


# Function for the auto-complete for the user input
def completer(text, state):
    options = [i for i in repolist if i.startswith(text)]
    if state < len(options):
        return options[state]
    else:
        return None


if __name__ == "__main__":
    # Parsing options
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hl", ["help", "list"])
    except getopt.GetoptError as err:
        print(str(err))
        usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            help()
            sys.exit()
        elif opt in ("-l", "--list"):
            list_repositories()
            sys.exit()

    # Bind the <tab> key to the auto completion function (completer)
    readline.parse_and_bind("tab: complete")
    readline.set_completer(completer)

    # Changing auto-completion words pool
    repolist = ["github", "savane"]
    platform = input('Do you want to clone from Github or Savane ?\n')

    # The user selected github
    if platform == "github":
        with open(repo_file) as json_file:
            json_data = json.load(json_file)
            print('List of Github repositories :')
            for data in json_data[platform]['repolist']:
                print("  " + data)
        repolist = json_data[platform]['repolist']  # Changing words pool
        repo = input('Chose one repository to clone :\n')
        os.system("git clone https://probakilla@github.com/probakilla/" + repo)
        json_file.close()

    # The user selected savane
    if platform == "savane":
        with open(repo_file) as json_file:
            json_data = json.load(json_file)
        print('List of Savane repositories : ')
        repolist = ["git", "svn"]  # Changing words pool
        prog = input('Chose the subversionning program : \nsvn or git ?\n')
        # Git repos in Savane
        if prog == "git":
            print('List of git repos in Savane :')
            for data in json_data[platform][prog]:
                print("  " + data)
            repolist = json_data[platform][prog]
            repo = input('Which one do you want to clone ?\n')
            os.system("git clone https://julpilleux@services." +
                      "emi.u-bordeaux.fr/projet/git/" + repo)
        # SVN repos in Savane
        elif prog == "svn":
            print('List of svn repos in Savane :')
            for data in json_data[platform][prog]:
                print("  " + data)
            repolist = json_data[platform][prog]  # Changing words pool
            repo = input('Which one do you want to clone ?\n')
            os.system("svn --username julpilleux co https://services." +
                      "emi.u-bordeaux.fr/projet/svn/" + repo)
        json_file.close()
